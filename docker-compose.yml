services:
  web:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-django_api_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    command: >
      sh -c "uv run python manage.py makemigrations &&
             uv run python manage.py migrate &&
             uv run python manage.py collectstatic --noinput &&
             uv run gunicorn --bind 0.0.0.0:8000 --workers 4 --timeout 120 django_api_project.wsgi:application"
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_NAME:-django_api_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  celery:
    build: .
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=False
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-django_api_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    command: uv run celery -A django_api_project worker -l info
    volumes:
      - ./media:/app/media
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
